<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--	
	UserMapper.xml :: SQL 를 갖는 MetaData 
	
	- MyBatis Framework 은 XML MetaData 를 사용 SQL구문을 관리
	  (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함)
	- SQL문의 입력(?) / 출력(?)을 매핑한다.  <== 아래의 select element 참조
 -->		
 
<mapper namespace = "MovieMapper" >

	<resultMap id="movieSelectMap" 			type="movie">
  		<result property="movieNo" 			column="movie_no"			jdbcType="NUMERIC"/>
  		<result property="movieRegDate"		column="movie_regdate" 		jdbcType="DATE"/>  		
  		<result property="openDt" 			column="movie_opendate" 	jdbcType="DATE"/>
  		<result property="endDt"  			column="movie_enddate" 		jdbcType="DATE"/>
  		<result property="movieNm" 			column="movie_title" 		jdbcType="VARCHAR"/>
  		<result property="postUrl" 			column="poster" 			jdbcType="VARCHAR"/>
  		<result property="directors" 		column="director" 			jdbcType="VARCHAR"/>
  		<result property="actors"	 		column="actor" 				jdbcType="VARCHAR"/>  
  		<result property="genres" 			column="genre" 				jdbcType="VARCHAR"/>
  		<result property="watchGradeNm" 	column="rating" 			jdbcType="VARCHAR"/>
  		<result property="showTm" 			column="runningtime"		jdbcType="VARCHAR"/>  		
  		<result property="synopsis" 		column="synopsis" 			jdbcType="VARCHAR"/>  	
  		<result property="trailer" 			column="trailer" 			jdbcType="VARCHAR"/>  	
  	</resultMap>
 
   	<insert 	id="addMovie" 	 parameterType="movie">
  		INSERT
		INTO movie ( movie_no,  movie_regdate, movie_opendate,movie_enddate,
						 movie_title,poster,director,actor,
					     genre,rating,runningtime,synopsis,trailer)
		VALUES (  	seq_movie_no.nextval, sysdate,
	    <if test="openDt 		 != null">            #{openDt},  							</if>  
		<if test="endDt 		 != null">			  to_date(#{endDt},'mm/dd/yyyy'),       </if>
				  #{movieNm},
		<if test="postUrl   	 != null">			  #{postUrl},       					</if>	
		<if test="directors 	 != null">			  #{directors},    						</if>
	
		<if test="actors    	 != null">			  #{actors},	    					</if>
				  #{genres},
		<if test="watchGradeNm   != null">	 		  #{watchGradeNm},  					</if>	
				  #{showTm},				  
		<if test="synopsis 		 != null">		 	  #{synopsis},							</if>
		<if test="trailer 		 != null">			  #{trailer}							</if>	  
		 )
  	</insert>
  	
  	<update    id="updateSteelCut" parameterType="movie">
  		UPDATE movie
  		<set>
  			<if test="steelCut != null">	       steelcut   = #{steelCut}	 </if>
		</set>
		WHERE moviecd = #{movieCd}	
  	</update>
  			 
  	
 	<insert 	id="addSteelCut" 	 parameterType="movie">
 		INSERT
		INTO movie ( movie_no, movie_opendate,movie_enddate,movie_title,director,poster,
				 actor,genre,rating,synopsis,trailer)
		VALUES (  seq_product_prod_no.nextval,
			  #{openDt},
			  #{endDt},
			  #{movieNm},
			  #{director},
			  #{postUrl},
	<if test="actor != null">		  #{actors},   </if>
	<if test="genre != null">		  #{genres},   </if>
			  #{watchGradeNm},
	<if test="synopsis != null">      #{synopsis}, </if>
	<if test="trailer != null">	 	  #{trailer}   </if>				  
			   )
 	</insert>
  	
  	<select 	id="getMovie" 	parameterType="java.lang.String" resultMap="movieSelectMap" >
  		SELECT
		movie_no, 	
		movieRegDate,	
		movie_opendate, 	
		movie_enddate, 		 
		movie_title, 				
		director,				
		poster,
		actor,
		genre,
		rating,
		steelCut,
		synopsis,
		trailer				
		FROM movie   
		WHERE movie_no = #{movieNo}											
  	</select>
  	
  	
  	<delete id="deleteMovieBatch" parameterType="java.util.List">
		DELETE FROM 
			movie
		WHERE movie_no in
			<foreach collection="list" item="movie_no" index="index" open="(" close=")" separator=",">
			#{movieNo}
		</foreach>	
	</delete>   
	
  	
  	<update    id="updateProduct" parameterType="product">
  		UPDATE product
  		<set>
  			<if test="prodName != null">	      prod_name   = #{prodName},		 </if>
  			<if test="quanity != null">         prod_quanity  = #{quanity:INTEGER},  </if>
			 								          price   = #{price}
			 								
		</set>
		WHERE prod_no = #{prodNo}	
  	</update>
 			 	

	<!-- SQL : SELECT LIST -->
	<select  id="getMovieList"  parameterType="search"	resultMap="movieSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT movie_no, movie_regdate, movie_opendate,movie_enddate,movie_title,
	  					                       poster,director,actor,genre,rating,runningtime,synopsis,steelcut,
	  					                       trailer
	  									FROM   movie 
	  									
	  										<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				movie_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				movie_title = #{searchKeyword}
													</if>
													<if test="searchCondition == 3 and searchKeyword !='' ">
										 				movie_opendate <![CDATA[<=]]> (to_date(#{searchKeyword}, 'yy/mm/dd')+6) 
										 				AND movie_enddate <![CDATA[>=]]> to_date(#{searchKeyword}, 'yy/mm/dd')
													</if>													
												</where>
											</if>
											ORDER BY movie_no DESC ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 <!--
	 <select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	 SELECT
  		prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date
  		FROM product
  		<if test="searchCondition!=null and searchKeyword !='' and searchKeyword !=null">
  			<where>
  				<if test="searchCondition==0 ">prod_no	=			#{searchKeyword}</if>  					
  				<if test="searchCondition==1 ">prod_name like 		#{searchKeyword}</if>
  				<if test="searchCondition==2 ">price =				#{searchKeyword} </if>  	
  		</where> 			
  		</if>
  	</select>
  	-->	
	<!-- SQL : SELECT ROW Count -->
	<!-- 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT  movie_no, movie_regdate, movie_opendate,movie_enddate,movie_title,
	  					poster,director,actor,genre,rating,runningtime,synopsis,steelcut,trailer
	  					FROM movie
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			movie_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			movie_title = #{searchKeyword}
								</if>								
							</where>
						</if> ) countTable						
	 </select>
	  -->
	 
	 
	<select id="getTotalCount" parameterType="search" resultType="int">
		SELECT COUNT(*)
		FROM(SELECT  movie_no, movie_regdate, movie_opendate,movie_enddate,movie_title,
	  					poster,director,actor,genre,rating,runningtime,synopsis,steelcut,trailer
	  					FROM movie
		
		<if test="searchCondition !=null">
		
				<if test="searchCondition == 1 and searchKeyword !='' ">
					WHERE movie_title LIKE '%'||#{searchKeyword}||'%'
				</if>
				<if test="searchCondition == 2 and searchKeyword !='' ">
					WHERE director LIKE '%'||#{searchKeyword}||'%'
				</if>
			
		</if>) countTable
	</select>
	
	
	<select id="uniMovieList" parameterType="search" resultMap="movieSelectMap">
		SELECT *
	        FROM (   SELECT inner_table.* , ROWNUM AS row_seq
	                    FROM      (   SELECT movie_no, movie_title, poster
	                                  FROM   movie 
	                                   <if test="searchCondition != null">
	                                    <where>
	                                       <if test="searchCondition == 3 and searchKeyword !='' ">
	                                           movie_opendate <![CDATA[<=]]> (to_date(#{searchKeyword}, 'yy/mm/dd')+6) 
	                                           AND movie_enddate <![CDATA[>=]]> to_date(#{searchKeyword}, 'yy/mm/dd')
	                                       </if>
	                                       <if test="searchCondition == 4 and searchKeyword !='' ">
	                                           movie_opendate <![CDATA[<=]]> (to_date(#{searchKeyword}, 'yy/mm/dd')) 
	                                           AND movie_enddate <![CDATA[>=]]> to_date(#{searchKeyword}, 'yy/mm/dd')
	                                       </if>                                                                              
	                                    </where>
	                                   </if>
	                                   <if test="searchCondition == null">
	                                    <where>
	                                       		movie_title LIKE '%${searchKeyword}%'                      
	                                    </where>
	                                   </if>
	                                 ORDER BY movie_no DESC ) inner_table
	              ) ORDER BY row_seq
	</select>
	 
	  
	  
 </mapper>