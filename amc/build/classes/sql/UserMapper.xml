<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
 	

	<resultMap id="userSelectMap" type="user">
		<result property="userId" 			column="user_id" 			jdbcType="VARCHAR"/>
		<result property="userName"			column="user_name" 			jdbcType="VARCHAR"/>
		<result property="password" 		column="password" 			jdbcType="VARCHAR"/>
		<result property="role" 			column="role" 				jdbcType="VARCHAR"/>		
		<result property="addr" 			column="addr" 				jdbcType="VARCHAR"/>
		<result property="addrDetail" 		column="addr_detail"		jdbcType="VARCHAR"/>
		<result property="userRegDate" 		column="user_regdate" 		jdbcType="DATE"/>
		<result property="birth" 			column="birth" 				jdbcType="DATE"/>
		<result property="phone1" 			column="phone1" 			jdbcType="VARCHAR"/>
		<result property="phone2" 			column="phone2" 			jdbcType="VARCHAR"/>
		<result property="phone3" 			column="phone3" 			jdbcType="VARCHAR"/>
		<result property="calendarType" 	column="sl_yn" 				jdbcType="CHAR"/>
		<result property="gender" 			column="gender" 			jdbcType="CHAR"/>
		<result property="deleteUserFlag" 	column="deleteuser_flag" 	jdbcType="CHAR"/>		
		<result property="uuId" 			column="uuid" 			jdbcType="VARCHAR"/>	
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addUser"		parameterType="user" >
	 	INSERT
		INTO users	( user_id, user_name, password, role, birth, phone1, phone2, phone3, sl_yn, gender, addr, addr_detail, user_regdate) 
		VALUES	 	( #{userId}, #{userName}, #{password}, 'user', #{birth}, 
						#{phone1}, #{phone2}, #{phone3}, #{calendarType}, #{gender}, #{addr}, #{addrDetail}, SYSDATE )
	 </insert>
	 
	 <!-- SQL : UPDATE (DeleteUser)-->
	 <update	id="deleteUser"	parameterType="user" >
	   	UPDATE users
	   		<set>
		   		deleteuser_flag = 'Y',
		   		role = 'not'
	   		</set>
	   	WHERE user_id = #{userId} and user_name = #{userName} and password = #{password}
	 </update>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="deleteCheck"	parameterType="user"	resultMap="userSelectMap">
		SELECT deleteuser_flag 		
		FROM users 
		WHERE user_name = #{userName} and user_id = #{value} and password = #{password}
	 </select>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getUser"	parameterType="string"	resultMap="userSelectMap">
		SELECT
		user_id, user_name, birth, sl_yn, gender, password, role, phone1, phone2, phone3, user_regdate, addr, addr_detail  		
		FROM users 
		WHERE user_id = #{value}
	 </select>
	 
 
 	<!-- SQL : SELECT LIST -->
	<select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  			FROM (	SELECT user_id , user_name, addr, role 
						FROM users
							<if test="searchCondition != null">
								<where>
									<if test="searchCondition == 0 and searchKeyword !='' ">
										user_id = #{searchKeyword}
									</if>
								
									<if test="searchCondition == 1 and searchKeyword !='' ">
										user_name = #{searchKeyword}
									</if>
								</where>
							</if>
						ORDER BY user_id ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
				WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
 
 	 <!-- SQL : UPDATE -->
	 <update	id="updateUser"	parameterType="user" >
	   	UPDATE users
	   		<set>
		   		user_name 	= #{userName},
		   		password	= #{password},
				phone1		= #{phone1},
				phone2		= #{phone2},
				phone3		= #{phone3},						
<!-- 				addr 		= #{addr},
				
				addr_detail	= #{addrDetail} -->
	   		</set>
	   	WHERE user_id = #{userId}
	 </update>

	 <!-- SQL : SELECT ONE -->
	 <select 	id="getId"	parameterType="user"	resultMap="userSelectMap">
		SELECT
		user_id, password 		
		FROM users 
		WHERE user_name = #{userName} and phone1 = #{phone1} and phone2 = #{phone2} and phone3 = #{phone3} and birth = #{birth}
	 </select>

	<!-- SQL : SELECT ROW Count -->	 
	<select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM (	SELECT user_id , user_name, addr, role
				FROM users
					<if test="searchCondition != null">
						<where>
							<if test="searchCondition == 0 and searchKeyword !='' ">
					 			user_id = #{searchKeyword}
							</if>
						
							<if test="searchCondition == 1 and searchKeyword !='' ">
						 		user_name = #{searchKeyword}
							</if>
						</where>
					</if> 
				) countTable						
	 </select> 
</mapper>