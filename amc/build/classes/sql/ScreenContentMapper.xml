<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
      "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ScreenContentMapper">

   <resultMap type="screenContent" id="screenContentSelectMap">
      <result property="screenContentNo" column="screencontent_no" jdbcType="INTEGER"/>
      <result property="movie.movieNo" column="movie_no" jdbcType="INTEGER"/>
      <result property="movie.poster" column="poster" jdbcType="VARCHAR"/>
      <result property="screenDate" column="screen_date" jdbcType="DATE"/>
      <result property="screenOpenTime" column="screen_openTime" jdbcType="DATE" />
      <result property="screenEndTime" column="screen_endTime" jdbcType="DATE" />
      <result property="screenTheater" column="screen_theater" jdbcType="CHAR" />
      <result property="ticketPrice" column="ticket_price" jdbcType="INTEGER" />
      <result property="previewFlag" column="preview_flag" jdbcType="VARCHAR" />
      <result property="previewTitle" column="preview_title" jdbcType="VARCHAR" />
      <result property="ticketOpenDate" column="ticket_opendate" jdbcType="DATE" />
      <result property="inviteActor" column="invite_Actor" jdbcType="VARCHAR" />
      <result property="screenContentRegDate" column="screencontent_regdate" jdbcType="DATE" />
   </resultMap>
   
   
   <select id="getScreenContentList" parameterType="map" resultMap="screenContentSelectMap">
      SELECT * 
      FROM (SELECT inner_table.*, ROWNUM AS row_seq
            FROM ( SELECT screencontent_no, movie_no, screencontent_regdate, screen_date, screen_opentime, screen_endtime, screen_theater, ticket_price, preview_flag, preview_title, ticket_opendate,invite_actor
					FROM screencontent 
					WHERE movie_no = #{movieNo}
					<if test="search.searchKeyword !='' and search.searchKeyword != null"> 
						AND screen_date between (to_date(#{search.searchKeyword}, 'yy/mm/dd')) AND (to_date(#{search.searchKeyword}, 'yy/mm/dd')+7)  
					</if> 
					ORDER BY screen_opentime
     			   )inner_table
     		 WHERE ROWNUM &lt; = #{search.endRowNum})   
      WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum}
   </select>

   
<!--    <insert id="addScreenContent" parameterType="screenContent">
   INSERT INTO screencontent(screencontent_no, movie_no, screencontent_regdate, screen_date, screen_opentime, screen_endtime, 
                                          screen_theater, ticket_price, preview_flag, preview_title, ticket_opendate,invite_actor)
   VALUES(seq_screencontent_no.nextval, #{movie.movieNo}, TO_DATE(SYSDATE,'YYYY/MM/DD'), TO_DATE(#{screenDate}, 'YYYY/MM/DD'), 
               TO_DATE(#{screenOpenTime},'YYYY/MM/DD HH24:MI'),  TO_DATE(#{screenEndTime},'YYYY/MM/DD HH24:MI'), #{screenTheater}, #{ticketPrice},
               <if test="previewFlag =='Y'"> 'Y', #{previewTitle}, TO_DATE(#{ticketOpentDate}, 'YYYY/MM/DD HH24:MI:SS'), #{inviteActor}</if>
               <if test="previewFlag =='N'"> 'N', NULL, NULL, NULL</if>
                  )   
   </insert>
   
   <update id="updateScreenContent" parameterType="screenContent">
   UPDATE screencontent
      <set>
            screen_date = TO_DATE(#{screenDate}, 'YYYY/MM/DD'),
            screen_opentime = TO_DATE(#{screenOpenTime},'YYYY/MM/DD HH24:MI'),
            screen_endtime = TO_DATE(#{screenEndTime},'YYYY/MM/DD HH24:MI'),
            screen_theater = #{screenTheater},
            ticket_price = #{ticketPrice},
            <if test="previewFlag !='Y'"> preview_flag = #{previewFlag}, preview_title = #{previewTitle}, ticket_opendate = TO_DATE(#{ticketOpentDate}, 
            'YYYY/MM/DD HH24:MI:SS'),  invite_actor =  #{inviteActor}</if>
            <if test="previewFlag !='N' ">preview_flag = #{previewFlag}, preview_title = NULL, ticket_opendate = NULL, invite_actor = NULL </if>
      </set>
      WHERE screencontent_no = #{screenContentNo}
   </update>
   
   <delete id="deleteScreenContent" parameterType="String">
      DELETE FROM screencontent
      WHERE screencontent_no = #{screenContentNo}
   </delete>
   
   
   <select id="getScreenContent" parameterMap="String" resultMap="screenContentSelectMap"> 
      SELECT screencontent_no, movie_no, screencontent_regdate, screen_date, screen_opentime, screen_endtime, 
                                          screen_theater, ticket_price, preview_flag, preview_title, ticket_opendate,invite_actor
      FROM screencontent
      WHERE screencontent_no = #{screenContentNo}
   </select>
   
      SELECT * 
      FROM (SELECT inner_table.*, ROWWNUM AS row_seq
            FROM ( SELECT screencontent_no, movie_no, screencontent_regdate, screen_date, screen_opentime, screen_endtime, 
                          screen_theater, ticket_price, preview_flag, preview_title, ticket_opendate,invite_actor
      		        FROM screencontent
     			    WHERE moive_no = #{movieNo} 
     			    ORDER BY screen_opentime 
     			   )inner_table
     		 WHERE ROWNUM &lt; = #{endRowNum})   
      WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
   </select>

   
   대관되어있는 영화시간
   <select id="notEmptyScreenContent" parameterType="map" resultMap='screenContentSelectMap'>
      SELECT screen_opentime, screen_endtime FROM   screencontent WHERE screen_theater = #{screenTheater} AND screen_date = #{screenDate}
   </select>
   
   시간이 중복되어있는지
   <select id="checkScreenDupTime" parameterType="String" resultType="int">
      SELECT COUNT(*) FROM screencontent WHERE  screen_theater = #{screenTheater} AND screen_date = #{screenDate}
      AND BTEWEEN screen_opentime AND screen_endtime 
   </select>
 -->   
   
    <select id="uniPreviewList" parameterType="string" resultMap="screenContentSelectMap">
	SELECT * FROM 
				(SELECT sc.preview_flag, sc.preview_title, mv.movie_no, mv.poster 
				FROM screencontent sc, movie mv 
				WHERE sc.movie_no = mv.movie_no AND sc.preview_title LIKE '%${value}%') 
			 WHERE preview_flag = 'Y'
	</select>
	
</mapper>