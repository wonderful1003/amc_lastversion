<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:p="http://www.springframework.org/schema/p"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans.xsd
								 
								 http://www.springframework.org/schema/context 
								 http://www.springframework.org/schema/context/spring-context.xsd
								 
								 http://www.springframework.org/schema/mvc 
								 http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<context:component-scan base-package="com.amc.web">
		<context:include-filter type="annotation"
								expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation"
								expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation"
								expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>

	
	 <!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" >
	 	<property name="order" value="0" />
	 	<property name="interceptors" ref="logonCheckInterceptor"/>
	 </bean> -->
	 
	 <!-- <bean id="logonCheckInterceptor" class="com.amc.common.web.LogonCheckInterceptor"/>-->
	 
	 <mvc:annotation-driven />
	 
	<mvc:interceptors>
		
   		<mvc:interceptor>
			<mvc:mapping path="/user/**"/>
			<bean class="com.amc.common.web.LogonCheckInterceptor" />
   		</mvc:interceptor>

   	</mvc:interceptors>

	 
	<mvc:resources mapping="/css/**" location="/css/" />
   	<mvc:resources mapping="/images/**" location="/images/" />
   	<mvc:resources mapping="/javascript/**" location="/javascript/" />
	 
	<bean id="viewResolver"
	 		class="org.springframework.web.servlet.view.InternalResourceViewResolver"/> 

<!-- 		::	Client 에 보여줄 Data(Model) 랜더링 / view 화면 Navigation 하는ViewResolver 
			:: 아래와 같이 서술적 기술 Test 후 주석처리해서 Test 할것 :: Default / Zero Configuration --> 

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="5242880000"></property>
    	<!-- <property name="uploadTempDir" ref="fileSystemResource"/> -->
    </bean>
    
    <!-- <bean id="fileSystemResource" class="org.springframework.core.io.FileSystemResource">
	<constructor-arg>
		<value>..\\Users\\KO\\git\\07.Model2MVCShop(stu)\\07.Model2MVCShop(stu)\\WebContent\\images\\uploadFiles</value>
	</constructor-arg>
	</bean> -->
			
    <bean id="exceptionResolver" 
    			class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" >	
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.NullPointerException">/common/nullError.jsp</prop>
				<prop key="java.lang.NumberFormatException">/common/numberFormatError.jsp</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="/common/error.jsp"/>
	</bean>
	
	 <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="contentType" value="text/plain;charset=UTF-8" />
	</bean>	
	
	<!--  Ajax multifile upload 에서 사용됨  
  
	<bean id="jsonMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
	<property name="objectMapper" ref="jsonMapper" />
	</bean>
    -->

</beans>